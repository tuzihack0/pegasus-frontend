name: Build - Android
on: [push, pull_request, workflow_dispatch]

env:
  TOOLS_URL: https://github.com/mmatyas/pegasus-frontend/releases/download/alpha1
  QT_TARGET: android
  QT_VERSION: qt51510
  QT_VERSION_PRETTY: "5.15.10"

jobs:
  android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: android
            abi: armeabi-v7a
          - name: android64
            abi: arm64-v8a

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e

      - name: Install Qt
        run: |
          .circleci/prepare.sh
          curl -L ${TOOLS_URL}/openssl-111t_android.tar.xz | tar xJf - -C /opt/

      - name: Build (Debug)
        env:
          BUILDOPTS: ANDROID_ABIS=${{ matrix.abi }} FORCE_QT_PNG=1
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_LATEST_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: .circleci/build.sh

      - name: Package (Debug APK)
        env:
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          ANDROID_NDK_LATEST_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: /opt/${QT_VERSION}_${QT_TARGET}/bin/androiddeployqt \
          --input src/app/android-pegasus-fe-deployment-settings.json \
          --output ${PWD}/installdir \
          --android-platform android-30 \
          --gradle

      - name: Stage artifact
        run: |
          mkdir -p dist
          cp installdir/build/outputs/apk/debug/installdir-debug.apk \
             dist/pegasus-fe_$(git describe --always)_${{ matrix.name }}.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: dist
